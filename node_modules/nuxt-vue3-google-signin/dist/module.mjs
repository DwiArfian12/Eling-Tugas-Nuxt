import { resolve } from 'path';
import { fileURLToPath } from 'url';
import { defineNuxtModule, useLogger, addPlugin, addComponent, addImportsSources } from '@nuxt/kit';
import { defineUnimportPreset } from 'unimport';

const MODULE_NAME = "nuxt-vue3-google-signin";
const module = defineNuxtModule({
  meta: {
    name: "vue3-google-signin",
    configKey: "googleSignIn",
    compatibility: {
      nuxt: "^3",
      bridge: false
    }
  },
  defaults: {
    clientId: ""
  },
  setup(options, nuxt) {
    if (isEmpty(options.clientId)) {
      useLogger(MODULE_NAME).error("provide googleSignIn.clientId in appConfig");
    }
    nuxt.options.runtimeConfig.public.googleSignIn = {
      clientId: options.clientId
    };
    const runtimeDir = fileURLToPath(new URL("./runtime", import.meta.url));
    nuxt.options.build.transpile.push(runtimeDir);
    addPlugin(resolve(runtimeDir, "plugin"));
    GsiBuiltinComponents.map((name) => addComponent({
      name,
      export: name,
      filePath: "vue3-google-signin"
    }));
    addImportsSources(defineUnimportPreset({
      from: "vue3-google-signin",
      imports: [...GsiComposables]
    }));
  }
});
function isEmpty(value) {
  if (!value) {
    return true;
  }
  return value.trim().length === 0;
}
const GsiBuiltinComponents = ["GoogleSignInButton"];
const GsiComposables = [
  "useTokenClient",
  "useCodeClient",
  "useGsiScript",
  "useOneTap"
];

export { module as default };
